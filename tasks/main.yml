---
- name: create nocode config directory
  file: path={{ item }} state=directory
  loop:
  - ~/.nocode
  - ~/.nocode/ntfy
  - ~/.nocode/n8n
  - ~/.nocode/n8n/nodes
  - ~/.nocode/nginx
  - ~/.nocode/page/assets/images
  - ~/.nocode/baserow
  - ~/.nocode/postgres
  - ~/.nocode/redis
  - ~/.nocode/qdrant

- name: create private key
  community.crypto.openssl_privatekey:
    path: ~/.nocode/nginx/certificate.key

- name: create certificate signing request (CSR) for self-signed certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: ~/.nocode/nginx/certificate.key
    common_name: "{{ hip }}"
    organization_name: No Code Platform
    subject_alt_name:
    - "DNS:*.{{ hip }}"
  register: csr

- name: create self-signed certificate from CSR
  community.crypto.x509_certificate:
    path: ~/.nocode/nginx/certificate.pem
    csr_content: "{{ csr.csr }}"
    privatekey_path: ~/.nocode/nginx/certificate.key
    provider: selfsigned

- name: create postgres init db script
  copy:
    src: "postgres/init-db.sh"
    dest: "~/.nocode/postgres-init-db.sh"
    mode: u=rwx,g=rx,o=rx

- name: create a network with custom IPAM config
  docker_network:
    name: nocode
    ipam_config:
    - subnet: 172.23.27.0/24
      gateway: 172.23.27.1
      iprange: 172.23.27.0/26

- name: start redis container
  docker_container:
    name: nocode-redis
    image: "redis:{{ redis_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.11"
      aliases:
      - redis
    log_driver: local
    volumes:
    - ~/.nocode/redis:/data
    #    published_ports:
    #      - 127.0.0.1:6379:6379
    restart_policy: unless-stopped

- name: start postgres container
  docker_container:
    name: nocode-postgres
    image: "postgres:{{ postgres_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.12"
      aliases:
      - postgres
    log_driver: local
    env:
      POSTGRES_USER: "{{ lookup('env','NOCODE_POSTGRES_USER') }}"
      POSTGRES_PASSWORD: "{{ lookup('env','NOCODE_POSTGRES_PASSWORD') }}"
      POSTGRES_DB: "{{ lookup('env','NOCODE_POSTGRES_DB') }}"
      POSTGRES_NON_ROOT_USER: "{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_USER') }}"
      POSTGRES_NON_ROOT_PASSWORD: "{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_PASSWORD') }}"
      N8N_POSTGRES_DB: "{{ lookup('env','NOCODE_N8N_POSTGRES_DB') }}"
      BASEROW_POSTGRES_DB: "{{ lookup('env','NOCODE_BASEROW_POSTGRES_DB') }}"
      GANDALF_POSTGRES_DB: "{{ lookup('env','NOCODE_GANDALF_POSTGRES_DB') }}"
    volumes:
    - ~/.nocode/postgres:/var/lib/postgresql/data
    - ~/.nocode/postgres-init-db.sh:/docker-entrypoint-initdb.d/init-data.sh
    #    published_ports:
    #      - 127.0.0.1:5432:5432
    restart_policy: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-h", "localhost", "-U", "{{ lookup('env','NOCODE_POSTGRES_USER') }}", "-d", "{{ lookup('env','NOCODE_POSTGRES_DB') }}" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s

- name: start baserow container
  docker_container:
    name: nocode-baserow
    image: "baserow/baserow:{{ baserow_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.13"
      aliases:
      - baserow
    log_driver: local
    env:
      BASEROW_PUBLIC_URL: "https://baserow.{{ domain }}"
      DATABASE_URL: "postgresql://{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_USER') }}:{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_PASSWORD') }}@postgres:5432/{{ lookup('env','NOCODE_BASEROW_POSTGRES_DB') }}"
      REDIS_URL: "redis://redis:6379"
      # BASEROW_BACKEND_LOG_LEVEL: "DEBUG"
      # https://community.baserow.io/t/issue-with-webhook-url-check/2094/7
      BASEROW_WEBHOOKS_ALLOW_PRIVATE_ADDRESS: "true"
      CURL_CA_BUNDLE: "/etc/ssl/certs/self-signed.pem"
    volumes:
    - ~/.nocode/baserow:/baserow/data
    - ~/.nocode/nginx/certificate.pem:/etc/ssl/certs/self-signed.pem:ro
    restart_policy: unless-stopped

- name: start qdrant container
  docker_container:
    name: nocode-qdrant
    image: "qdrant/qdrant:v{{ qdrant_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.14"
      aliases:
      - qdrant
    log_driver: local
    volumes:
    - ~/.nocode/qdrant:/qdrant/storage:z
    #    published_ports:
    #      - 127.0.0.1:6333:6333
    restart_policy: unless-stopped

- name: start n8n container
  docker_container:
    name: nocode-n8n
    image: "docker.n8n.io/n8nio/n8n:{{ n8n_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.15"
      aliases:
      - n8n
    user: root
    log_driver: local
    env:
      DB_TYPE: "postgresdb"
      DB_POSTGRESDB_HOST: "postgres"
      DB_POSTGRESDB_PORT: "5432"
      DB_POSTGRESDB_DATABASE: "{{ lookup('env','NOCODE_N8N_POSTGRES_DB') }}"
      DB_POSTGRESDB_USER: "{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_USER') }}"
      DB_POSTGRESDB_PASSWORD: "{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_PASSWORD') }}"
      EXECUTIONS_MODE: "queue"
      QUEUE_BULL_REDIS_HOST: "redis"
      QUEUE_HEALTH_CHECK_ACTIVE: "true"
      WEBHOOK_URL: "https://n8n.{{ domain }}"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      GENERIC_TIMEZONE: "Europe/Warsaw"
      NODE_FUNCTION_ALLOW_BUILTIN: "*"
      NODE_FUNCTION_ALLOW_EXTERNAL: "uuid"
      N8N_ENCRYPTION_KEY: "{{ lookup('env','NOCODE_N8N_ENCRYPTION_KEY') }}"
      N8N_RUNNERS_ENABLED: "true"
      OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS: "true"
    volumes:
    - ~/.nocode/n8n:/root/.n8n
    restart_policy: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "/dev/null", "-t", "1", "-T", "2", "http://localhost:5678/healthz" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

- name: start n8n worker container
  docker_container:
    name: nocode-n8n-worker
    image: "docker.n8n.io/n8nio/n8n:{{ n8n_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.16"
      aliases:
      - n8n-worker
    user: root
    log_driver: local
    env:
      DB_TYPE: "postgresdb"
      DB_POSTGRESDB_HOST: "postgres"
      DB_POSTGRESDB_PORT: "5432"
      DB_POSTGRESDB_DATABASE: "{{ lookup('env','NOCODE_N8N_POSTGRES_DB') }}"
      DB_POSTGRESDB_USER: "{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_USER') }}"
      DB_POSTGRESDB_PASSWORD: "{{ lookup('env','NOCODE_POSTGRES_NON_ROOT_PASSWORD') }}"
      EXECUTIONS_MODE: "queue"
      QUEUE_BULL_REDIS_HOST: "redis"
      QUEUE_HEALTH_CHECK_ACTIVE: "true"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      GENERIC_TIMEZONE: "Europe/Warsaw"
      NODE_FUNCTION_ALLOW_BUILTIN: "*"
      NODE_FUNCTION_ALLOW_EXTERNAL: "uuid"
      N8N_ENCRYPTION_KEY: "{{ lookup('env','NOCODE_N8N_ENCRYPTION_KEY') }}"
      N8N_RUNNERS_ENABLED: "true"
    volumes:
    - ~/.nocode/n8n:/root/.n8n
    restart_policy: unless-stopped
    command:
    - worker

- name: start pgAdmin container
  docker_container:
    name: nocode-pgadmin
    image: "dpage/pgadmin4:{{ pgadmin_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.17"
      aliases:
      - pgadmin
    env:
      PGADMIN_DEFAULT_EMAIL: "{{ lookup('env','NOCODE_PGADMIN_EMAIL') }}"
      PGADMIN_DEFAULT_PASSWORD: "{{ lookup('env','NOCODE_PGADMIN_PASSWORD') }}"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
    restart_policy: unless-stopped

- name: start NTFY container
  docker_container:
    name: nocode-ntfy
    image: "binwiederhier/ntfy:v{{ ntfy_version }}"
    env:
      TZ: "UTC"
      NTFY_BASE_URL: "https://ntfy.{{ domain }}"
      NTFY_UPSTREAM_BASE_URL: "https://ntfy.sh"
      NTFY_CACHE_FILE: /etc/ntfy/cache.db
      NTFY_AUTH_FILE: /etc/ntfy/auth.db
      NTFY_AUTH_DEFAULT_ACCESS: deny-all
      NTFY_BEHIND_PROXY: "true"
      NTFY_ATTACHMENT_CACHE_DIR: /etc/ntfy/attachments
      NTFY_ENABLE_LOGIN: "true"
    volumes:
    - ~/.nocode/ntfy:/etc/ntfy
    networks:
    - name: nocode
      ipv4_address: "172.23.27.18"
      aliases:
      - ntfy
    restart_policy: unless-stopped
    command:
    - serve

- name: create nginx config files
  copy:
    src: "conf.d/"
    dest: "~/.nocode/nginx/"
    directory_mode: yes
  notify:
  - restart loadbalancer

- name: add qdrant dashboard admin password
  htpasswd:
    path: "~/.nocode/nginx/.passwdfile"
    name: admin
    password: "{{ lookup('env','NOCODE_QDRANT_DASHBOARD_PASSWORD') }}"
  notify:
  - restart loadbalancer

- name: copy main page assets files
  copy:
    src: "page/"
    dest: "~/.nocode/page/"
  notify:
  - restart loadbalancer

- name: create page from template
  template:
    src: index.html.j2
    dest: "~/.nocode/page/index.html"

- name: start loadbalancer container
  docker_container:
    name: nocode-lb
    image: "nginx:{{ nginx_version }}"
    networks:
    - name: nocode
      ipv4_address: "172.23.27.10"
      aliases:
      - lb
    log_driver: local
    volumes:
    - ~/.nocode/nginx:/etc/nginx/conf.d:ro
    - ~/.nocode/page:/var/www/html:ro
    published_ports:
    - 80:80
    - 443:443
    restart_policy: unless-stopped

- name: add admin user for NTFY
  community.docker.docker_container_exec:
    container: nocode-ntfy
    command: /bin/sh -c "NTFY_PASSWORD={{ lookup('env','NOCODE_NTFY_PASSWORD') }} ntfy user add --ignore-exists --role=admin admin"

- name: install n8n extensions
  community.docker.docker_container_exec:
    container: nocode-n8n
    command: /bin/sh -c "npm install n8n-nodes-mcp n8n-nodes-baserow-trigger n8n-nodes-digital-ocean n8n-nodes-discord n8n-nodes-google-sheets-trigger n8n-nodes-notionmd n8n-nodes-ntfy n8n-nodes-text-manipulation n8n-nodes-debughelper n8n-nodes-globals"
    chdir: /root/.n8n/nodes
  register: result

- name: restart n8n and n8n-worker
  docker_container:
    name: "{{  item }}"
    restart: yes
  loop:
  - nocode-n8n
  - nocode-n8n-worker
  when: result.stdout.find('up to date') == -1

- meta: flush_handlers

- name: installation is done
  debug:
    msg: "Platforma gotowa - sprawd≈∫: https://{{ domain }}"
